package main

import (
	"flag"
	"log"
	"net/http"

	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	// generated by protoc-gen-go
	"hermeneutic-candles/gen/proto/candles/v1/candlesv1connect" // generated by protoc-gen-connect-go
	"hermeneutic-candles/internal/candles"
)

func main() {
	// Initialize flags
	intervalMillisFlag := flag.Int("interval", 5000, "Candle interval in milliseconds")
	flag.Parse()

	mux := http.NewServeMux()
	candlesService := candles.NewCandlesService(*intervalMillisFlag)

	path, handler := candlesv1connect.NewCandlesServiceHandler(candlesService)
	mux.Handle(path, handler)

	server := &http.Server{
		// TODO: move to config file
		Addr:    ":8080",
		Handler: h2c.NewHandler(mux, &http2.Server{}),
	}

	log.Println("Starting server on :8080")
	if err := server.ListenAndServe(); err != nil {
		log.Fatalf("Failed to start server: %v", err)
	}
	log.Println("Server stopped")
}
